import{_ as i,c as s,o as a,a4 as t}from"./chunks/framework.C7sZLB-2.js";const e="/gepengcn.github.io/assets/Preparing-views-for-localization-1@2x.CimZIaUp.png",n="/gepengcn.github.io/assets/SwiftUI-LocalizedStringKey-Today-List-Japanese@2x.Mr9UPABb.png",u=JSON.parse('{"title":"Localizing text","description":"","frontmatter":{},"headers":[],"relativePath":"swiftui/text_input_and_output/localizing_text.md","filePath":"swiftui/text_input_and_output/localizing_text.md","lastUpdated":1715738965000}'),l={name:"swiftui/text_input_and_output/localizing_text.md"},p=t(`<h1 id="localizing-text" tabindex="-1">Localizing text <a class="header-anchor" href="#localizing-text" aria-label="Permalink to &quot;Localizing text&quot;">​</a></h1><p>对 SwiftUI 视图进行本地化，以便用户以他们自己的母语、地区和文化体验你的应用程序。Xcode 在导出本地化目录时会解析 SwiftUI 视图中的字符串以进行本地化。你可以添加提示，以便 Xcode 为你的应用程序生成正确的、带提示的字符串进行本地化。</p><h2 id="add-comments-to-text-views" tabindex="-1">Add comments to text views <a class="header-anchor" href="#add-comments-to-text-views" aria-label="Permalink to &quot;Add comments to text views&quot;">​</a></h2><p>为了简化翻译过程，向翻译人员提供提示，告知他们你的应用程序如何以及在何处显示 <code>Text</code> 视图的字符串。要添加提示，请使用 <code>Text</code> 视图初始化器 <code>init(_:tableName:bundle:comment:)</code> 的可选 <code>comment</code> 参数。当你使用 Xcode 对应用程序进行本地化时，它会将注释字符串与字符串一起包含在内。例如，以下 <code>Text</code> 视图包含一个注释：</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Explore&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    comment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;The title of the tab bar item that navigates to the Explore screen.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Xcode 会在你的字符串目录文件中为这个视图创建以下条目：</p><p><img src="`+e+`" alt="Preparing-views-for-localization-1@2x"></p><h2 id="provide-additional-information-with-text-views" tabindex="-1">Provide additional information with text views <a class="header-anchor" href="#provide-additional-information-with-text-views" aria-label="Permalink to &quot;Provide additional information with text views&quot;">​</a></h2><p>你可以通过提供一个 SwiftUI 解释为 <code>LocalizedStringKey</code> 的字符串来本地化许多具有字符串标签的 SwiftUI 视图。系统在运行时使用该键从你的字符串目录中检索本地化的值，或者如果在目录中找不到该键，则直接使用该字符串。例如，SwiftUI 将以下 <code>Label</code> 初始化器的字符串输入用作本地化字符串键：</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Label</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;msgSymbol&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>如果你还想提供本地化的注释，可以使用显式的 <code>Text</code> 视图：</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Label</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        comment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;A label that displays &#39;Message&#39; and a corresponding image.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">icon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    Image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;msgSymbol&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>许多 SwiftUI 控件都有视图构建器初始化器，使你能够遵循这种模式。</p><h2 id="localizedstringkey" tabindex="-1"><code>LocalizedStringKey</code> <a class="header-anchor" href="#localizedstringkey" aria-label="Permalink to &quot;\`LocalizedStringKey\`&quot;">​</a></h2><p>用于在字符串文件或字符串字典文件中查找条目的键。</p><p>几个 SwiftUI 类型的初始化器（如 <code>Text</code>、<code>Toggle</code>、<code>Picker</code> 等）在你提供字符串字面量时会隐式查找本地化字符串。当你使用初始化器 <code>Text(&quot;Hello&quot;)</code> 时，SwiftUI 会为你创建一个 <code>LocalizedStringKey</code>，并使用该键查找 &quot;Hello&quot; 字符串的本地化版本。这是因为 <code>LocalizedStringKey</code> 符合 <code>ExpressibleByStringLiteral</code>。</p><p>其初始化器接受 <code>LocalizedStringKey</code> 的类型通常有一个对应的初始化器，该初始化器接受符合 <code>StringProtocol</code> 的参数。将 <code>String</code> 变量传递给这些初始化器可以避免本地化，这通常适用于变量包含用户提供的值的情况。</p><p>一般来说，当你需要本地化时使用字符串字面量参数，当你不需要本地化时使用字符串变量参数。如果你想本地化字符串变量的值，可以使用该字符串创建一个新的 <code>LocalizedStringKey</code> 实例。</p><p>下面的示例展示了如何创建带本地化和不带本地化的 <code>Text</code> 实例。提供给 <code>Section</code> 的 <code>title</code> 参数是一个字面量字符串，因此 SwiftUI 会为它创建一个 <code>LocalizedStringKey</code>。然而，<code>messageStore.today</code> 数组中的字符串条目是 <code>String</code> 变量，因此列表中的 <code>Text</code> 视图将直接使用字符串值。</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">List</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    Section</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">header</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Today&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        ForEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(messageStore.today) { message </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(message.title)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>如果应用程序被本地化为日语，并使用以下 Localizable.strings 文件进行翻译：</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Today&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;今日&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>在日语环境下运行时，该示例会生成一个如下所示的列表，其中“Today”为节标题进行了本地化，但列表项没有本地化。</p><p><img src="`+n+'" alt="SwiftUI-LocalizedStringKey-Today-List-Japanese@2x"></p>',24),o=[p];function h(d,k,c,r,g,E){return a(),s("div",null,o)}const F=i(l,[["render",h]]);export{u as __pageData,F as default};
