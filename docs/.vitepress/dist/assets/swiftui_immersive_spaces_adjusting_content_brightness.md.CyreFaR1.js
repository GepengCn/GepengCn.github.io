import{_ as s,c as i,o as t,a4 as e}from"./chunks/framework.C7sZLB-2.js";const u=JSON.parse('{"title":"Adjusting content brightness","description":"","frontmatter":{},"headers":[],"relativePath":"swiftui/immersive_spaces/adjusting_content_brightness.md","filePath":"swiftui/immersive_spaces/adjusting_content_brightness.md","lastUpdated":1714547705000}'),a={name:"swiftui/immersive_spaces/adjusting_content_brightness.md"},n=e('<h1 id="adjusting-content-brightness" tabindex="-1">Adjusting content brightness <a class="header-anchor" href="#adjusting-content-brightness" aria-label="Permalink to &quot;Adjusting content brightness&quot;">​</a></h1><h2 id="immersivecontentbrightness" tabindex="-1"><code>ImmersiveContentBrightness</code> <a class="header-anchor" href="#immersivecontentbrightness" aria-label="Permalink to &quot;`ImmersiveContentBrightness`&quot;">​</a></h2><p>沉浸式空间的内容亮度。</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ImmersiveContentBrightness</span></span></code></pre></div><p>使用这种类型的值作为 <code>immersiveContentBrightness(_:)</code> 场景修饰符的输入，以指示沉浸式空间的环境内容亮度。</p><p>当你这样做以创建适合视频播放的环境时，使用标准亮度值，如明亮、昏暗或黑暗，以为大多数用例提供良好的结果。</p><p>为了进一步优化，你可以使用一个标准化值创建自定义亮度，该值表达标准动态范围白色视频帧与围绕播放器窗口的背景之间的线性亮度比。</p><ul><li><code>automatic</code>: 默认的内容亮度</li><li><code>bright</code>: 明亮</li><li><code>dark</code>: 黑暗</li><li><code>dim</code>: 昏暗</li></ul><h3 id="custom" tabindex="-1"><code>custom(_:)</code> <a class="header-anchor" href="#custom" aria-label="Permalink to &quot;`custom(_:)`&quot;">​</a></h3><p>创建具有自定义值的内容亮度。</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> custom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> value: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ImmersiveContentBrightness</span></span></code></pre></div><p>亮度的值。提供一个介于0和1之间的值。数值越大，环境越亮。</p>',12),h=[n];function o(r,c,l,d,p,g){return t(),i("div",null,h)}const m=s(a,[["render",o]]);export{u as __pageData,m as default};
