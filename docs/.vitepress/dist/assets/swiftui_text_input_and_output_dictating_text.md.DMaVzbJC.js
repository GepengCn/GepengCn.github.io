import{_ as s,c as i,o as a,a4 as t}from"./chunks/framework.C7sZLB-2.js";const g=JSON.parse('{"title":"Dictating text","description":"","frontmatter":{},"headers":[],"relativePath":"swiftui/text_input_and_output/dictating_text.md","filePath":"swiftui/text_input_and_output/dictating_text.md","lastUpdated":1715738965000}'),e={name:"swiftui/text_input_and_output/dictating_text.md"},n=t(`<h1 id="dictating-text" tabindex="-1">Dictating text <a class="header-anchor" href="#dictating-text" aria-label="Permalink to &quot;Dictating text&quot;">​</a></h1><h2 id="searchdictationbehavior" tabindex="-1"><code>searchDictationBehavior(_:)</code> <a class="header-anchor" href="#searchdictationbehavior" aria-label="Permalink to &quot;\`searchDictationBehavior(_:)\`&quot;">​</a></h2><p>在搜索栏中添加听写麦克风。</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> searchDictationBehavior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dictationBehavior: TextInputDictationBehavior) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> some</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> View</span></span></code></pre></div><h2 id="typeselectequivalent" tabindex="-1"><code>typeSelectEquivalent(_:)</code> <a class="header-anchor" href="#typeselectequivalent" aria-label="Permalink to &quot;\`typeSelectEquivalent(_:)\`&quot;">​</a></h2><p>在集合（如列表或表格）中设置显式类型选择等效文本。</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> typeSelectEquivalent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> text: Text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> some</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> View</span></span></code></pre></div><p>默认情况下，类型选择等效项是从列表或表格中的任何 <code>Text</code> 或 <code>TextField</code> 内容自动派生的。在下面的示例中，即使没有设置显式值，也可以使用类型选择来选择一个人。</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">List</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(people, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">selection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: $selectedPersonID) { person </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    Label</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(person.name)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    } </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">icon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        person.avatar</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>当没有文本内容或需要与视图中显示的内容不同的值时，应设置显式类型选择值。显式值还为复杂视图类型提供了更高的性能。在下面的示例中，显式设置类型选择以允许选择否则仅显示图像的视图。</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">List</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(people, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">selection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: $selectedPersonID) { person </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    person.avatar</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">accessibilityLabel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(person.name)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">typeSelectEquivalent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(person.name)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>设置空字符串值会禁用视图的文本选择，而 <code>nil</code> 值会导致视图使用其默认值。</p>`,12),p=[n];function h(l,k,d,c,r,o){return a(),i("div",null,p)}const y=s(e,[["render",h]]);export{g as __pageData,y as default};
