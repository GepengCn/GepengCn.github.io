import{_ as i,c as s,o as a,a4 as e}from"./chunks/framework.C7sZLB-2.js";const l="/gepengcn.github.io/assets/FileDialogConfirmationLabel.BkY1ugby.png",t="/gepengcn.github.io/assets/FileDialogMessage.DggXuprk.png",f=JSON.parse('{"title":"Configuring a file dialog","description":"","frontmatter":{},"headers":[],"relativePath":"swiftui/modal_presentations/configuring_a_file_dialog.md","filePath":"swiftui/modal_presentations/configuring_a_file_dialog.md","lastUpdated":1714704529000}'),n={name:"swiftui/modal_presentations/configuring_a_file_dialog.md"},h=e('<h1 id="configuring-a-file-dialog" tabindex="-1">Configuring a file dialog <a class="header-anchor" href="#configuring-a-file-dialog" aria-label="Permalink to &quot;Configuring a file dialog&quot;">​</a></h1><h2 id="filedialogbrowseroptions" tabindex="-1"><code>fileDialogBrowserOptions(_:)</code> <a class="header-anchor" href="#filedialogbrowseroptions" aria-label="Permalink to &quot;`fileDialogBrowserOptions(_:)`&quot;">​</a></h2><p>在 macOS 上，配置 <code>fileExporter</code>、<code>fileImporter</code> 或 <code>fileMover</code> 以提供精细化的 URL 搜索体验：包括或排除隐藏文件，允许通过标签进行搜索等。</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fileDialogBrowserOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> options: FileDialogBrowserOptions) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> some</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> View</span></span></code></pre></div><ul><li><code>displayFileExtensions</code>: 在 iOS 上，配置 <code>fileExporter</code>、<code>fileImporter</code> 或 <code>fileMover</code> 以显示或隐藏文件扩展名。 默认行为是隐藏它们，在 macOS 上，此选项无效。</li><li><code>enumeratePackages</code>: 允许枚举包内容，与默认行为形成对比，其中包被平面化地表示，类似于文件。</li><li><code>includeHiddenFiles</code>: 显示默认隐藏的文件。</li></ul><h2 id="filedialogconfirmationlabel" tabindex="-1"><code>fileDialogConfirmationLabel(_:)</code> <a class="header-anchor" href="#filedialogconfirmationlabel" aria-label="Permalink to &quot;`fileDialogConfirmationLabel(_:)`&quot;">​</a></h2><p>在 macOS 上，使用自定义确认按钮标签配置 <code>fileExporter</code>、<code>fileImporter</code> 或 <code>fileMover</code>。</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fileDialogConfirmationLabel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> label: S) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> some</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> View </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> StringProtocol</span></span></code></pre></div><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fileExporter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isPresented</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: $showingExporter, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">document</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: document, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">contentType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: .plainText) { result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ...</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fileDialogConfirmationLabel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;确定导出？&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><img src="'+l+'" alt="FileDialogConfirmationLabel"></p><h2 id="filedialogcustomizationid" tabindex="-1"><code>fileDialogCustomizationID(_:)</code> <a class="header-anchor" href="#filedialogcustomizationid" aria-label="Permalink to &quot;`fileDialogCustomizationID(_:)`&quot;">​</a></h2><p>在 macOS 上，配置 <code>fileExporter</code>、<code>fileImporter</code> 或 <code>fileMover</code> 以保留和恢复文件对话框配置。</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fileDialogCustomizationID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> some</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> View</span></span></code></pre></div><p>这段文字的中文翻译是：</p><p>除了其他参数外，它存储当前目录、视图样式（例如，图标、列表、列视图）、最近访问位置和扩展的窗口大小。</p><p>这使得用户体验更加精细；例如，在导入图片时，用户可能切换到图标视图，但在其他情境中列表视图可能更方便。文件对话框会存储这些设置，并在每次显示面板之前应用它们。如果没有提供设置，文件对话框在每次启动时都使用默认配置。</p><h2 id="filedialogdefaultdirectory" tabindex="-1"><code>fileDialogDefaultDirectory(_:)</code> <a class="header-anchor" href="#filedialogdefaultdirectory" aria-label="Permalink to &quot;`fileDialogDefaultDirectory(_:)`&quot;">​</a></h2><p>配置 <code>fileExporter</code>、<code>fileImporter</code> 或 <code>fileMover</code> 以使用指定的默认目录打开。</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fileDialogDefaultDirectory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> defaultDirectory: URL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> some</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> View</span></span></code></pre></div><ul><li><code>defaultDirectory</code>: 系统文件对话框启动时显示的目录。如果给定的文件对话框具有 <code>fileDialogCustomizationID</code>，则存储用户选择的目录并随后使用它打开，忽略此修饰符中提供的默认值。</li></ul><h2 id="filedialogimportsunresolvedaliases" tabindex="-1"><code>fileDialogImportsUnresolvedAliases(_:)</code> <a class="header-anchor" href="#filedialogimportsunresolvedaliases" aria-label="Permalink to &quot;`fileDialogImportsUnresolvedAliases(_:)`&quot;">​</a></h2><p>在 macOS 上，配置用户选择别名时的 <code>fileExporter</code>、<code>fileImporter</code> 或 <code>fileMover</code> 行为。</p><ul><li><code>imports</code>: 一个布尔值，指示当用户选择别名时应用程序是否收到未解析或已解析的 <code>URL</code>。</li></ul><p>默认情况下，文件对话框解析别名并提供所选别名引用的项目的 <code>URL</code>。</p><p>此修饰符允许控制此行为：如果应用程序不希望文件对话框解析别名，则传递 <code>true</code>。</p><h2 id="filedialogmessage" tabindex="-1"><code>fileDialogMessage(_:)</code> <a class="header-anchor" href="#filedialogmessage" aria-label="Permalink to &quot;`fileDialogMessage(_:)`&quot;">​</a></h2><p>在 macOS 上，使用向用户显示的自定义消息（类似于标题）配置 <code>fileExporter</code>、<code>fileImporter</code> 或 <code>fileMover</code>。</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fileDialogMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> message: S) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> some</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> View </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> StringProtocol</span></span></code></pre></div><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fileExporter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isPresented</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: $showingExporter, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">document</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: document, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">contentType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: .plainText) { result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ...</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fileDialogMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;导出文件格式为 txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><img src="'+t+`" alt="FileDialogMessage"></p><h2 id="filedialogurlenabled" tabindex="-1"><code>fileDialogURLEnabled(_:)</code> <a class="header-anchor" href="#filedialogurlenabled" aria-label="Permalink to &quot;\`fileDialogURLEnabled(_:)\`&quot;">​</a></h2><p>在 macOS 上，配置 <code>fileImporter</code> 或 <code>fileMover</code> 以有条件地禁用显示的 URL。</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fileDialogURLEnabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> predicate: Predicate&lt;URL&gt;) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> some</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> View</span></span></code></pre></div><ul><li><code>predicate</code>: 评估呈现给用户的 URL，并有条件地禁用它们。该实现预期具有恒定的复杂度，且不应访问文件内容或元数据，一个常见的用例是检查路径或文件名。</li></ul><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fileExporter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isPresented</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: $showingExporter, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">document</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: document, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">contentType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: .plainText) { result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fileDialogURLEnabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#Predicate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> $0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.hasDirectoryPath </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> $0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.isFileURL</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div>`,35),p=[h];function k(o,d,r,g,c,E){return a(),s("div",null,p)}const u=i(n,[["render",k]]);export{f as __pageData,u as default};
